#!/usr/bin/env perl

use 5.008008;

use strict;
use warnings;

use App::AckX::Preflight;

our $VERSION;

BEGIN {
    $VERSION = '0.000_019';
}

App::AckX::Preflight->run();

__END__

=head1 TITLE

ackxp - Ad-hoc preflight munging of F<ack>'s arguments.

=head1 SYNOPSIS

 ackxp -w foo
 ackxp -help
 ackxp -version

=head1 OPTIONS

The following options are interpreted directly. Others may be
interpreted by plug-ins or by F<ack>. See the relevant documentation for

=head2 --disable

 --disable=plugin_name

This option disables the named plugin. The name is either the complete
class name or the name without the C<'App::AckX::Preflight::Plugin::'>
prefix.

An exception occurs if the name of an unknown plugin is given.

=head2 --enable

 --enable=plugin_name

This option enables the named plug-in. That is, it undoes a previous
C<--disable>; specifying this will not make an unavailable plug-in
available. The name is either the complete class name or the name
without the C<'App::AckX::Preflight::Plugin::'> prefix.

An exception occurs if the name of an unknown plugin is given.

=head2 --env

This Boolean option requests the use of the environment (i.e.
environment variables, configuration files) to configure
C<App::AckX::Preflight>. This option is passed on to F<ack> itself.

The default is C<--env>, but this can be negated with C<--noenv>.

=head2 --help

This options causes the POD of the top-level script (as determined by
C<$0>) to be displayed. The script then exits.

This option can also be given one of the following arguments:

=over

=item C<'config'>

This argument causes the names of any configuration files used to be
displayed.

=item C<'plugins'>

This argument causes the names of any available plugins to be displayed.

=item plugin name

If this argument is an item from the plugins list, the POD for that
plugin will be displayed.

=back

All other arguments to C<--help> are invalid and result in an error.

=head2 --man

This is a synonym for C<--help>, and takes the same optional arguments.

=head2 --verbose

This causes C<App::AckX::Preflight> to write certain information to
standard error. The exact nature of this information is undocumented,
and subject to change without notice.

=head2 --version

This option causes the versions of C<App::AckX::Preflight>,
L<App::Ack|App::Ack>, and Perl to be displayed. The script then exits.
these.

=head1 DETAILS

This Perl script simply loads
L<App::AckX::Preflight|App::AckX::Preflight> and calls its
L<run()|App::AckX::Preflight/run> method. This method loads whatever
plugins are installed, and calls them to modify the command arguments as
they see fit. Then it passes control to the F<ack> script.

No, none of this makes F<ack> do anything it would not have done before.
But it can come close. A plug-in could do something like load patterns
from a file, or restrict the search to files whose names appear in a
F<MANIFEST>. At this level it's really an exercise in imagination.

=head1 AUTHOR

Thomas R. Wyant, III F<wyant at cpan dot org>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2018 by Thomas R. Wyant, III

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl 5.10.0. For more details, see the full text
of the licenses in the directory LICENSES.

This program is distributed in the hope that it will be useful, but
without any warranty; without even the implied warranty of
merchantability or fitness for a particular purpose.

=cut

# ex: set textwidth=72 :
