#!/usr/bin/env perl

use 5.008008;

use strict;
use warnings;

use Cwd qw{ abs_path };
use File::Spec;
use File::Which;
use Getopt::Long 2.33 qw{ :config auto_version };
use Module::Pluggable::Object 5.2;
use Pod::Usage;

our $VERSION = '0.000_022';

my @argv = @ARGV;

my %opt;

GetOptions( \%opt,
    qw{ sudo! unlink! },
    help => sub { pod2usage( { -verbose => 2 } ) },
) or pod2usage( { -verbose => 0 } );

if ( $opt{sudo} && $< ) {
    my $xqt = get_perl_path();
    my $scr = abs_path( $0 );
    -f $scr
	or die "Can not find executing script $scr\n";
    my $sudo = which( 'sudo' )
	or die "Could not find sudo\n";
    exec { $sudo } $sudo, $xqt, $scr, @argv;
    die "Exec failed: $!\n";
}

foreach my $relative_path ( qw{ Plugin Syntax } ) {
    my $search_path = "App::AckX::Preflight::$relative_path";
    my @parts = split qr{ :: }smx, $search_path;
    my $mpo = Module::Pluggable::Object->new(
	inner		=> 0,
	max_depth	=> @parts + 1,
	require		=> 1,
	search_path	=> $search_path,
    );
    foreach my $class ( $mpo->plugins() ) {
	$class->IN_SERVICE
	    and next;
	if ( $opt{unlink} ) {
	    ( my $fn = "$class.pm" ) =~ s< :: ></>smxg;
	    print "$INC{$fn}\n";
	    unlink $INC{$fn}
		or warn "Failed to unlink $INC{$fn}: $!\n";
	} else {
	    print "$class\n";
	}
    }
}

{
    local $@ = undef;
    eval {
	require App::AckX::Preflight::Resource;
	my $class = 'App::AckX::Preflight::Resource';
	if ( $opt{unlink} ) {
	    ( my $fn = "$class.pm" ) =~ s< :: ></>smxg;
	    print "$INC{$fn}\n";
	    unlink $INC{$fn}
		or warn "Failed to unlink $INC{$fn}: $!\n";
	} else {
	    print "$class\n";
	}
    };
}

sub get_perl_path {
    my $xqt = $^X;
    File::Spec->file_name_is_absolute( $xqt )
	or eval {
	require Probe::Perl;
	$xqt = Probe::Perl->find_perl_interpreter();
	1;
    } or do {
	$xqt = which( 'perl' );
    };
    -x $xqt
	or die "Perl executable $xqt not found\n";
    return $xqt;
}

__END__

=head1 TITLE

ackxp-out-of-service - Report out-of-service App::AckX::Preflight plug-ins.

=head1 SYNOPSIS

 ackxp-out-of-service
 ackxp-out-of-service -unlink
 ackxp-out-of-service -help
 ackxp-out-of-service -version

=head1 OPTIONS

=head2 -help

This option displays the documentation for this script. The script then
exits.

=head2 -sudo

If this Boolean option is asserted, the script reruns itself using
C<sudo (1)>.

The default is C<-nosudo>.

=head2 -unlink

If this Boolean option is asserted, out-of-service plug-ins' file names
rather than module names will be displayed, and the files will be
deleted. You may need to L<-sudo|/-sudo> this.

The default is C<-nounlink>.

=head2 -version

This option displays the version of this script. The script then exits.

=head1 DETAILS

This Perl script displays out-of-service
L<App::AckX::Preflight|App::AckX::Preflight> plug-ins, and other retired
components of this distribution, optionally removing them.

=head1 AUTHOR

Thomas R. Wyant, III F<wyant at cpan dot org>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2018 by Thomas R. Wyant, III

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl 5.10.0. For more details, see the full text
of the licenses in the directory LICENSES.

This program is distributed in the hope that it will be useful, but
without any warranty; without even the implied warranty of
merchantability or fitness for a particular purpose.

=cut

# ex: set textwidth=72 :
