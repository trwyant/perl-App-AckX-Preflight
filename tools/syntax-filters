#!/usr/bin/env perl

use 5.008008;

use strict;
use warnings;

use App::AckX::Preflight::Syntax;
use Getopt::Long 2.33 qw{ :config auto_version };
use Pod::Usage;

our $VERSION = '0.000_020';

my %opt = (
    env	=> 1,
);

GetOptions( \%opt,
    qw{ env! },
    help => sub { pod2usage( { -verbose => 2 } ) },
) or pod2usage( { -verbose => 0 } );

my %syntax_handler;

foreach my $class ( App::AckX::Preflight::Syntax->__plugins() ) {
    foreach my $type ( $class->__handles_type() ) {
	$syntax_handler{$type} = $class;
    }
}

{
    my %annotation = (
	asp	=> 'Active Server Pages (HTML with embedded VB)',
	aspx	=> 'ASP.NET (HTML with embedded VB or C#)',
	cfmx	=> 'Cold Fusion (HTML templating)',
	elixir	=> 'Erlang variant',
	jade	=> 'JavaScript templating engine',
	jsp	=> 'Java Server Pages (HTML with embedded Java)',
	rst	=> 'ReStructured Text (Python documentation)',
	smarty	=> 'PHP templating engine',
    );
    my @cmd = (
	qw{ ack --help-types },
	map { $opt{$_} ? "--$_" : "--no$_" } qw{ env },
    );
    open my $fh, '-|', @cmd
	or die "Can not pipe ack --help-types into us: $!\n";
    while ( <$fh> ) {
	m/ \A \s* \Q--[no]\E ( \w+ ) /smx
	    or next;
	my $type = $1;
	my $handler = $syntax_handler{$type};
	unless ( defined $handler ) {
	    $handler = $annotation{$type} ?
		"<missing> - $annotation{$type}" :
		'<missing>';
	}
	print "$type\t$handler\n";
    }
    close $fh;
}

__END__

=head1 TITLE

syntax-filters - List syntax filters for each ack file type

=head1 SYNOPSIS

 syntax-filters
 syntax-filters -help
 syntax-filters -version

=head1 OPTIONS

=head2 -env

This Boolean option tells F<ack> to pay attention to environment
variables and configuration files, which may define additional file
types.

The default is C<-env>, but you can override this by specifying
C<-noenv>, which causes only the built-in types to be listed.

=head2 -help

This option displays the documentation for this script. The script then
exits.

=head2 -version

This option displays the version of this script. The script then exits.

=head1 DETAILS

This Perl script lists the syntax filter for each type supported by
ack. If a type has no filter C<< '<missing>' >> is displayed.

The types come from the output of F<ack --help-types>. The syntax
filters come from C<< App::AckX::Preflight::Syntax->__plugins() >>. The
types for each filter come from
C<< App::AckX::Preflight::Syntax->__handles_type() >>.

=head1 AUTHOR

Thomas R. Wyant, III F<wyant at cpan dot org>

=head1 COPYRIGHT AND LICENSE

Copyright (C) 2018 by Thomas R. Wyant, III

This program is free software; you can redistribute it and/or modify it
under the same terms as Perl 5.10.0. For more details, see the full text
of the licenses in the directory LICENSES.

This program is distributed in the hope that it will be useful, but
without any warranty; without even the implied warranty of
merchantability or fitness for a particular purpose.

=cut

# ex: set textwidth=72 :
